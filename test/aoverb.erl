-module(aoverb).
-export([dv/2]).

-include_lib("eunit/include/eunit.hrl").

dv(A,B) when (A == 0) and (B > 4) ->
    B;
dv(A,B) ->
    B / A.

full_test() ->
    {_Z,NZ,_P} = abtest:do_dv_tests(?MODULE,[{0,5},{5,5},{5,0},{0,2}]),
    ?assert(abtest:contains(NZ,[
				{matched,{{6,4},{6,6}},[]},
				{matched,{{6,15},{6,32}},[{{6,4},{6,6}}]},
				{non_matched,{{6,15},{6,32}},[{{6,4},{6,6}}]},
				{matched,{{6,15},{6,20}},[{{6,4},{6,6}},{false,{{6,15},{6,32}}}]},
				{non_matched,{{6,15},{6,20}},[{{6,4},{6,6}},{false,{{6,15},{6,32}}}]},
				{matched,{{6,28},{6,32}},[{{6,4},{6,6}},{false,{{6,15},{6,32}}}]},
				{non_matched,{{6,28},{6,32}},[{{6,4},{6,6}},{false,{{6,15},{6,32}}}]},
				{matched,{{6,15},{6,20}},[{{6,4},{6,6}},{{6,15},{6,32}}]},
				{non_matched,{{6,15},{6,20}},[{{6,4},{6,6}},{{6,15},{6,32}}]},
				{matched,{{6,28},{6,32}},[{{6,4},{6,6}},{{6,15},{6,32}}]},
				{non_matched,{{6,28},{6,32}},[{{6,4},{6,6}},{{6,15},{6,32}}]},
				{matched,{{8,4},{8,6}},[]}
			       ])).

cond_dec_test() ->
    {Z,NZ,_P} = abtest:do_dv_tests(?MODULE,[{0,5},{5,5},{5,0}]),
    ?assert(abtest:contains(NZ,[
				{matched,{{6,4},{6,6}},[]},
				{matched,{{6,15},{6,32}},[{{6,4},{6,6}}]},
				{non_matched,{{6,15},{6,32}},[{{6,4},{6,6}}]},
				{non_matched,{{6,15},{6,20}},[{{6,4},{6,6}},{false,{{6,15},{6,32}}}]},
				{matched,{{6,28},{6,32}},[{{6,4},{6,6}},{false,{{6,15},{6,32}}}]},
				{non_matched,{{6,28},{6,32}},[{{6,4},{6,6}},{false,{{6,15},{6,32}}}]},
				{matched,{{6,15},{6,20}},[{{6,4},{6,6}},{{6,15},{6,32}}]},
				{non_matched,{{6,15},{6,20}},[{{6,4},{6,6}},{{6,15},{6,32}}]},
				{matched,{{6,28},{6,32}},[{{6,4},{6,6}},{{6,15},{6,32}}]},
				{non_matched,{{6,28},{6,32}},[{{6,4},{6,6}},{{6,15},{6,32}}]},
				{matched,{{8,4},{8,6}},[]}
			       ])),
    ?assert(abtest:contains(Z,[
			       {never_matched,{{6,15},{6,20}},[{{6,4},{6,6}},{false,{{6,15},{6,32}}}]}
			      ])).

